//–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ ESI)
import { NextRequest, NextResponse } from "next/server";
import { getUserInfo } from "@/lib/eveApi"; // –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ—Ç —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

export async function GET(req: NextRequest) {
  const token = req.cookies.get("eve_token")?.value; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫—É–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
  // console.log("üîç –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω:", token);

  if (!token) {
    console.error("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
  }

  try {
    const user = await getUserInfo(token);
    // console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", user);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–º–µ—Å—Ç–µ —Å —Ç–æ–∫–µ–Ω–æ–º!
    return NextResponse.json({ ...user, AccessToken: token });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
    return NextResponse.json({ error: "Failed to fetch user data" }, { status: 500 });
  }
}
